
R version 4.2.1 (2022-06-23 ucrt) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # tests involving a response with no noise added, using alligator data
> 
> library(rrLogit)
> 
> # example in wide format
> fitA <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Sex + Size,
+    data=alligatorWide)
> # same model, narrow format
> fitB <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorNarrow, freq=Freq)
> # same model, microdata
> fitC <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorMicro)
> 
> # verify that the resulting coefficients are the same
> coef(fitA)
             Fish        Inv       Rept       Bird      Other
(Intercept)     0 -2.0744513 -2.9141377 -2.4632747 -0.9167261
LakeOklawaha    0  2.6936942  1.4007966 -1.1256172 -0.7405175
LakeTrafford    0  2.9363342  1.9315865  0.6617240  0.7911874
LakeGeorge      0  1.7805123 -1.1294628 -0.5752664 -0.7665752
SexF            0  0.4629629  0.6275587  0.6064286  0.2525695
Sizelarge       0 -1.3362610  0.5570360  0.7302394 -0.2905828
> all.equal(coef(fitA), coef(fitB))
[1] TRUE
> all.equal(coef(fitA), coef(fitC))
[1] TRUE
> 
> # verify that the resulting fitted values are the same
> head(fitted.values(fitA))
          Fish        Inv       Rept        Bird      Other
[1,] 0.6006519 0.07545711 0.03258584 0.051148899 0.24015620
[2,] 0.6236514 0.02059152 0.05905622 0.110228583 0.18647229
[3,] 0.5070799 0.10120825 0.05152616 0.079187829 0.26099782
[4,] 0.5157652 0.02705582 0.09147892 0.167175631 0.19852444
[5,] 0.3033992 0.56357055 0.06680036 0.008382596 0.05784725
[6,] 0.4825217 0.23556992 0.18543804 0.027670680 0.06879971
> all.equal( fitted.values(fitA), fitted.values(fitB) )
[1] TRUE
> all.equal( fitted.values(fitA), fitted.values(fitC) )
[1] TRUE
> 
> # verify that the resulting residuals are the same
> head(residuals(fitA))
           Fish         Inv       Rept        Bird      Other
[1,] -0.2893234  0.01924183 -0.6508579 -0.81543588  1.0628450
[2,] -0.1749598 -0.37965856 -0.6429569  0.26001584  0.6080473
[3,]  0.7755248  0.22721841  0.5704975 -0.04103724 -1.4533459
[4,] -0.7620718 -0.49345962  0.1947285  0.40389196  0.9076801
[5,]  0.3921555 -0.48720975 -0.5779289 -0.20472660  1.3215965
[6,]  0.1283005  0.35363226  0.5367653 -0.84819672 -1.3374574
> all.equal( residuals(fitA), residuals(fitB) )
[1] TRUE
> all.equal( residuals(fitA), residuals(fitC) )
[1] TRUE
> 
> # display predictions
> head(predict(fitA))
       Fish        Inv       Rept        Bird      Other
1 0.6006519 0.07545711 0.03258584 0.051148899 0.24015620
2 0.6236514 0.02059152 0.05905622 0.110228583 0.18647229
3 0.5070799 0.10120825 0.05152616 0.079187829 0.26099782
4 0.5157652 0.02705582 0.09147892 0.167175631 0.19852444
5 0.3033992 0.56357055 0.06680036 0.008382596 0.05784725
6 0.4825217 0.23556992 0.18543804 0.027670680 0.06879971
> head(predict(fitB))
       Fish        Inv       Rept      Bird     Other
1 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
2 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
3 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
4 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
5 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
6 0.6236514 0.02059152 0.05905622 0.1102286 0.1864723
> head(predict(fitC))
       Fish        Inv       Rept      Bird     Other
1 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
2 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
3 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
4 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
5 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
6 0.6006519 0.07545711 0.03258584 0.0511489 0.2401562
> all.equal( predict(fitA)[1,], predict(fitB)[1,] )
[1] TRUE
> all.equal( predict(fitA)[1,], predict(fitC)[1,] )
[1] TRUE
> 
> # fit a smaller model without Sex and compare
> fitD <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Size,
+    data=alligatorWide)
> anova(fitD, fitA)
Model 1: cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Size
Model 2: cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Sex + Size
  nParams -2*loglik df change
1      20    540.08          
2      24    537.87  4 2.2148
> 
> # apply DAP prior with default settings
> fitA <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Sex + Size,
+    data=alligatorWide, prior="DAP")
> fitB <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorNarrow, freq=Freq, prior="DAP")
> fitC <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorMicro, prior="DAP")
> coef(fitA)
             Fish        Inv       Rept       Bird      Other
(Intercept)     0 -1.7662992 -2.6559142 -2.3782067 -0.9126615
LakeOklawaha    0  2.2171277  1.1934182 -0.9431898 -0.6551547
LakeTrafford    0  2.4345088  1.6458426  0.5638914  0.6600217
LakeGeorge      0  1.4577573 -0.8971654 -0.5238777 -0.7115691
SexF            0  0.4070439  0.4005849  0.5107109  0.2195017
Sizelarge       0 -1.1244154  0.4790580  0.6303668 -0.2561446
> all.equal(coef(fitA), coef(fitB))
[1] TRUE
> all.equal(coef(fitA), coef(fitC))
[1] TRUE
> 
> # apply DAP prior with custom settings
> fitA <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Sex + Size,
+    data=alligatorWide,
+    prior="DAP", priorFreqTot=3.5, priorAlloc=rep(1/5,5) )
> fitB <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorNarrow, freq=Freq,
+    prior="DAP", priorFreqTot=3.5, priorAlloc=rep(1/5,5) )
> fitC <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorMicro,
+    prior="DAP", priorFreqTot=3.5, priorAlloc=rep(1/5,5) )
> coef(fitA)
             Fish        Inv       Rept       Bird      Other
(Intercept)     0 -2.0322961 -2.8298804 -2.4201425 -0.9123985
LakeOklawaha    0  2.6323163  1.3586026 -0.9872752 -0.7073581
LakeTrafford    0  2.8758073  1.8788720  0.6763533  0.7830152
LakeGeorge      0  1.7381588 -1.0264269 -0.5441377 -0.7522522
SexF            0  0.4589717  0.5953203  0.6094294  0.2576265
Sizelarge       0 -1.3080368  0.5302519  0.6899026 -0.2833768
> all.equal(coef(fitA), coef(fitB))
[1] TRUE
> all.equal(coef(fitA), coef(fitC))
[1] TRUE
> 
> # fit intercept-only models
> fitA <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ 1, data=alligatorWide)
> fitB <- rrLogit( Food ~ 1, data=alligatorNarrow, freq=Freq)
> fitC <- rrLogit( Food ~ 1, data=alligatorMicro)
> coef(fitA)
            Fish        Inv      Rept      Bird     Other
(Intercept)    0 -0.4324209 -1.598856 -1.978345 -1.077559
> all.equal(coef(fitA), coef(fitB))
[1] TRUE
> all.equal(coef(fitA), coef(fitC))
[1] TRUE
> 
> # fit intercept-only models
> fitA <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ 1, data=alligatorWide)
> fitB <- rrLogit( Food ~ 1, data=alligatorNarrow, freq=Freq)
> fitC <- rrLogit( Food ~ 1, data=alligatorMicro)
> coef(fitA)
            Fish        Inv      Rept      Bird     Other
(Intercept)    0 -0.4324209 -1.598856 -1.978345 -1.077559
> all.equal(coef(fitA), coef(fitB))
[1] TRUE
> all.equal(coef(fitA), coef(fitC))
[1] TRUE
> margProportions <- table(alligatorMicro$Food) / NROW(alligatorMicro)
> all.equal(as.vector(margProportions), as.vector(fitted(fitA)))
[1] TRUE
> all.equal(as.vector(margProportions), as.vector(fitted(fitB)))
[1] TRUE
> all.equal(as.vector(margProportions), as.vector(fitted(fitC)))
[1] TRUE
> 
> 
> # change the baseline
> fitD <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ 1, data=alligatorWide,
+    baseline="Rept")
> all(coef(fitA) == coef(fitD))      # should be FALSE
[1] FALSE
> all.equal(fitted(fitA), fitted(fitD))  # should be TRUE
[1] TRUE
> 
> # a few model summaries using print.summary.rrLogit
> fitA <- rrLogit( cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Sex + Size,
+    data=alligatorWide)
> summary(fitA)
cbind(Fish, Inv, Rept, Bird, Other) ~ Lake + Sex + Size
Saturated option: FALSE
           Prior: none 

                Data format: wide
       Frequencies supplied: TRUE
      Rows of supplied data: 16  
   Total N in supplied data: 219 
Distinct covariate patterns: 16  
   Empty covariate patterns: 0   

Response categories: Fish Inv Rept Bird Other
  Baseline category: Fish                    

Assumed perturbation matrix: Identity

Number of estimated parameters = 24
            Degrees of freedom = 40

Newton-Raphson procedure
Starting values: default
Converged at iteration 6
Gradient length = 0.000000

  Final logP = -268.9327
Final loglik = -268.9327

Estimated marginal probs. for true response
  Fish    Inv   Rept   Bird  Other 
0.4292 0.2785 0.0868 0.0594 0.1461 
> fitB <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorNarrow, freq=Freq)
> summary(fitB)
Food ~ Lake + Sex + Size
Saturated option: FALSE
           Prior: none 

                Data format: narrow
       Frequencies supplied: TRUE  
      Rows of supplied data: 80    
   Total N in supplied data: 219   
Distinct covariate patterns: 16    
   Empty covariate patterns: 0     

Response categories: Fish Inv Rept Bird Other
  Baseline category: Fish                    

Assumed perturbation matrix: Identity

Number of estimated parameters = 24
            Degrees of freedom = 40

Newton-Raphson procedure
Starting values: default
Converged at iteration 6
Gradient length = 0.000000

  Final logP = -268.9327
Final loglik = -268.9327

Estimated marginal probs. for true response
  Fish    Inv   Rept   Bird  Other 
0.4292 0.2785 0.0868 0.0594 0.1461 
> fitC <- rrLogit( Food ~ Lake + Sex + Size,
+    data=alligatorMicro)
> summary(fitC)
Food ~ Lake + Sex + Size
Saturated option: FALSE
           Prior: none 

                Data format: narrow
       Frequencies supplied: FALSE 
      Rows of supplied data: 219   
   Total N in supplied data: 219   
Distinct covariate patterns: 16    
   Empty covariate patterns: 0     

Response categories: Fish Inv Rept Bird Other
  Baseline category: Fish                    

Assumed perturbation matrix: Identity

Number of estimated parameters = 24
            Degrees of freedom = 40

Newton-Raphson procedure
Starting values: default
Converged at iteration 6
Gradient length = 0.000000

  Final logP = -268.9327
Final loglik = -268.9327

Estimated marginal probs. for true response
  Fish    Inv   Rept   Bird  Other 
0.4292 0.2785 0.0868 0.0594 0.1461 
> 
> proc.time()
   user  system elapsed 
   0.18    0.07    0.26 
